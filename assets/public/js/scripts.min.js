var esServerApp=angular.module("esServerApp",["ngCookies","ngResource","ngSanitize","ui.router","ui.bootstrap","angularPayments","stripe.checkout","toaster","ngAnimate"]);esServerApp.config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","$interpolateProvider","StripeCheckoutProvider","$uiViewScrollProvider",function($stateProvider,$urlRouterProvider,$locationProvider,$httpProvider,$interpolateProvider,StripeCheckoutProvider,$uiViewScrollProvider){$stateProvider.state("change_password",{url:"/change_password/:passwordtoken",controller:"changePasswordCtrl"}).state("home",{url:"/",controller:function($location,$anchorScroll){}}).state("about",{url:"/about",controller:function($location,$anchorScroll){var old=$location.hash();$location.hash("about"),$anchorScroll(),$location.hash(old)}}).state("sheep",{url:"/sheep",controller:function($location,$anchorScroll){var old=$location.hash();$location.hash("sheep"),$anchorScroll(),$location.hash(old)}}).state("download",{url:"/download",controller:function($location,$anchorScroll){var old=$location.hash();$location.hash("download"),$anchorScroll(),$location.hash(old)}}),$uiViewScrollProvider.useAnchorScroll(),StripeCheckoutProvider.defaults({key:publishableStripeKey}),$interpolateProvider.startSymbol("[["),$interpolateProvider.endSymbol("]]"),$httpProvider.interceptors.push("authInterceptor")}]),esServerApp.constant("ROOT_URL",ROOT),esServerApp.factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function($rootScope,$q,$cookieStore,$location){return{request:function(config){return config.headers=config.headers||{},$cookieStore.get("token")&&(config.headers.Authorization="Bearer "+$cookieStore.get("token")),config},responseError:function(response){return 401===response.status&&($location.path("/login"),$cookieStore.remove("token")),$q.reject(response)}}}]),esServerApp.run(["$rootScope","$location","Auth","$state","$stateParams",function($rootScope,$location,Auth,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.$on("$stateChangeStart",function(event,next){Auth.isLoggedInAsync(function(loggedIn){next.authenticate&&!loggedIn&&$location.path("/login")})})}]),esServerApp.controller("AdminUsersCtrl",["$scope","$http","toaster",function($scope,$http,toaster){$scope.users=[],$scope.plans=[],$scope.searchField="";var getUsers=function(data){data=data||"",$http({method:"GET",url:ROOT+"api/users/"+data}).success(function(data,status,headers,config){$scope.users=data}).error(function(data,status,headers,config){toaster.pop({type:"error",message:"Some error has occurred"})})};getUsers(),$http({method:"GET",url:ROOT+"api/subscriptions/"}).success(function(data,status,headers,config){$scope.plans=data.data,$scope.plans.push({id:"lifetime",name:"Lifetime"}),$scope.plans.push({id:"none",name:"None"})}).error(function(data,status,headers,config){toaster.pop({type:"error",message:"Some error has occurred"})}),$scope.triggerSearch=function(){3<$scope.searchField.length?getUsers("?email="+$scope.searchField):""===$scope.searchField&&getUsers("?email="+$scope.searchField)},$scope.editPlan=function(row){$scope.users[row].editPlan=!$scope.users[row].editPlan},$scope.changePlan=function(row){$scope.users[row].editPlan=!1,$http({method:"POST",url:ROOT+"api/admin/change-plan",data:{email:$scope.users[row].email,plan:$scope.users[row].planName}}).success(function(data,status,headers,config){toaster.pop({type:data.status,title:data.message}),$scope.users[row].planEndDate=data.data.endDate}).error(function(data,status,headers,config){toaster.pop({type:"error",title:"Some error has occurred"})})}}]),esServerApp.controller("changePasswordCtrl",["$rootScope","$scope","Auth","$location","$stateParams","$http","$modal","toaster",function($rootScope,$scope,Auth,$location,$stateParams,$http,$modal,toaster){$rootScope.passwordToken=$stateParams.passwordtoken,$http.get(ROOT+"api/users/check_password_token/"+$rootScope.passwordToken).then(function(data,status,headers,config){$modal.open({animation:!1,templateUrl:"changePassword.html",controller:"resetPassword"})}).catch(function(data,status,headers,config){toaster.error({title:"Your token is invalid."})})}]),esServerApp.controller("resetPassword",["$rootScope","$scope","$location","$http","$modalInstance","toaster",function($rootScope,$scope,$location,$http,$modalInstance,toaster){$scope.user={password:"",confirmPassword:""},$scope.loading=!1,$scope.submitted=!1,$scope.close=$modalInstance.close,$scope.resetPassword=function(form){$scope.submitted=!0,$scope.loading=!0,form.$valid?$http.post(ROOT+"api/users/reset_password",{password:$scope.user.password,passwordToken:$rootScope.passwordToken}).then(function(data,status,headers,config){$rootScope.passwordToken="",$scope.loading=!1,$modalInstance.close(),toaster.success({title:"Password has been reset successfully."})}).catch(function(data,status,headers,config){$scope.loading=!1,$scope.error=data.message}):$scope.loading=!1}}]),esServerApp.controller("confirmCtrl",["$scope","Auth","$location","$stateParams","$http","toaster",function($scope,Auth,$location,$stateParams,$http,toaster){$scope.confirmationToken=$stateParams.ctoken,console.log(ROOT+"api/users/confirm"),$http({method:"GET",url:ROOT+"api/users/confirm/"+$scope.confirmationToken,data:{}}).success(function(data,status,headers,config){toaster.pop({type:"success",title:data.message}),$scope.isUserLoggedIn=Auth.isLoggedIn(),$scope.isUserLoggedIn?$location.path("/"):$("#login").click()}).error(function(data,status,headers,config){toaster.pop({type:"warning",title:data.message}),$location.path("/"),$("#login").click()})}]),esServerApp.controller("ElectricSheepCtrl",["$scope","Auth","$location","$http","StripeCheckout","$timeout","$modal","$log","$rootScope","$anchorScroll",function($scope,Auth,$location,$http,StripeCheckout,$timeout,$modal,$log,$rootScope,$anchorScroll){$scope.animationsEnabled=!1,$scope.scrollToTop=function(){$location.hash("home"),$anchorScroll()},$scope.openSignIn=function(){$modal.open({animation:$scope.animationsEnabled,templateUrl:"signIn.html",controller:"SignInCtrl"}).result.then(function(res){res&&res.openSignUp?$scope.openSignUp():res&&res.openForgotPassword&&$scope.openForgotPassword()},function(err){"Connection failed."===err&&errorDisplay(err)})},$scope.openSignUp=function(){$modal.open({animation:$scope.animationsEnabled,templateUrl:"signUp.html",controller:"SignUpGoldCtrl"}).result.then(function(res){res&&res.openSignIn?$scope.openSignIn():res&&res.openForgotPassword?$scope.openForgotPassword():res&&res.managePlan&&$scope.openPlansModal()},function(err){"Connection failed."===err&&errorDisplay(err)})},$scope.openForgotPassword=function(){$modal.open({animation:$scope.animationsEnabled,templateUrl:"forgetPassword.html",controller:"ForgotPasswordCtrl"})},$scope.openPlansModal=function(){$modal.open({animation:$scope.animationsEnabled,templateUrl:"plans.html",controller:"PlansCtrl",resolve:{user:["Auth",function(Auth){return Auth.getCurrentUser()}],stripe:StripeCheckout.load}})},$scope.openSignupOrManagePlan=function(){$scope.isLoggedIn()?$scope.openPlansModal():$scope.openSignUp()},$scope.errors={},$scope.plans=[],$scope.planId="",$scope.loading=!1,$scope.signupSuccess=!1,Auth.isLoggedInAsync(function(success){$scope.user=Auth.getCurrentUser()}),$scope.isLoggedIn=Auth.isLoggedIn,$scope.cancelSubscriptionEndDate=0,$scope.getNavClass=function(){return $rootScope.navclass};var errorDisplay=function(err){$modal.open({animation:$scope.animationsEnabled,template:'<div id="form-card">  <div class="panel panel-info">     <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="close()">&times;</button>    <div class="panel-heading modal-header"><div class="panel-title">'+err+'</div></div>    <div class="modal-body panel-body panel">Our server is currently having some issues. Please contact       <a href="mailto:info@electricsheep.org" target="_blank">info@electricsheep.org</a> and try again later.      <div class="clearfix"></div>    </div>    <div class="modal-footer"></div>  </div></div>',controller:function($scope,$modalInstance){$scope.close=function(){$modalInstance.close()}}})}}]),esServerApp.controller("ForgotPasswordCtrl",["$scope","$modalInstance","$http","toaster",function($scope,$modalInstance,$http,toaster){$scope.user={email:""},$scope.close=$modalInstance.close,$scope.sendForgotPasswordInstruction=function(form){$scope.loading=!0,$scope.submitted=!0,$scope.error="",form.$valid?$http.post(ROOT+"api/users/send_forgot_instruction",{email:$scope.user.email}).success(function(data,status,headers,config){$scope.loading=!1,$scope.user={email:""},toaster.pop({type:"success",title:"Successfully sent instructions."}),$modalInstance.close()}).error(function(data,status,headers,config){$scope.loading=!1,$scope.error=data.message}):$scope.loading=!1}}]),esServerApp.controller("NavbarCtrl",["$scope","$http","Auth","$location","toaster","$rootScope","ROOT_URL",function($scope,$http,Auth,$location,toaster,$rootScope,ROOT_URL){$scope.isCollapsed=!0,$scope.adminBarNav=!1,$scope.isLoggedIn=Auth.isLoggedIn,$scope.getCurrentUser=Auth.getCurrentUser,$scope.isAdmin=Auth.isAdmin,$scope.logout=function(){Auth.logout(),toaster.pop({type:"success",title:"Successfully logged out."}),$scope.user=""},$scope.sync=function(){toaster.pop({type:"warning",title:"Please don't refresh",showCloseButton:!1,timeout:0}),toaster.pop({type:"wait",title:"Request Initiated. Please wait...",showCloseButton:!1,timeout:0}),$http({method:"POST",url:ROOT_URL+"api/sync"}).then(function(response){toaster.clear(),toaster.pop({type:response.data.status,title:response.data.message})},function(response){toaster.clear(),toaster.pop({type:"error",title:response.data})})},$scope.changeHeaderClass=function(){$rootScope.navclass?$rootScope.navclass="":$rootScope.navclass="nav-active"},$scope.isActive=function(route){return route===$location.path()},$scope.toggleAdminBar=function(){$scope.adminBarNav=!$scope.adminBarNav}}]),esServerApp.controller("PlansCtrl",["$scope","$modalInstance","user","StripeCheckout","$http","toaster","Auth",function($scope,$modalInstance,user,StripeCheckout,$http,toaster,Auth){$scope.close=function(){$modalInstance.close({user:$scope.user})},$scope.user=user,$scope.loadingChangePlan=!1;var stripeHandler=StripeCheckout.configure({name:"Spotworks LLC",image:"https://s3.amazonaws.com/stripe-uploads/acct_15nBQjHOUsTdAffbmerchant-icon-1428280601666-white-fill-solid.png"});$scope.loadbarMessage="loading plan",$scope.hideUpgrades=!0,$scope.showUpdateOptions=function(){$scope.hideUpgrades=!$scope.hideUpgrades},$scope.showCancellation=!1,$scope.showCancelConfirmation=function(){$scope.showCancellation=!$scope.showCancellation,$scope.hideUpgrades=!0},$scope.loadingPlans=!0,$http.get(ROOT+"api/subscriptions").then(function(response){$scope.loadingPlans=!1,$scope.plans=response.data.data}).catch(function(response){console.log(response)}),$scope.planName=function(){for(var currentPlan=$scope.user.planName,plans=$scope.plans,i=0;plans&&i<plans.length;i++)plans[i].id===$scope.user.planName&&(currentPlan=plans[i].name);return currentPlan},$scope.goldToggle=!1,$scope.toggleGoldInfo=function(){$scope.goldToggle=!$scope.goldToggle},""!==$scope.user.planName&&$http.get(ROOT+"api/subscriptions/getmyinfo",{params:{cust_id:$scope.user.customerToken}}).then(function(response){response.data.deleted?$scope.user.deleted=!0:($scope.user.lastFour=response.data.sources.data[0].last4,$scope.user.brand=response.data.sources.data[0].brand,$scope.user.created=response.data.created)}),$scope.deleteToggle=!1,$scope.canDeleteAccount=function(){$scope.showCancellation=!0,$scope.deleteToggle=!0},$scope.cancelDelete=function(){$scope.showCancellation=!1,$scope.deleteToggle=!1},$scope.delUser=function(){$http.delete(ROOT+"api/users/"+$scope.user._id,$scope.user).then(function(result,status,headers,config){$scope.close(),Auth.logout()}).catch(function(data,status,headers,config){console.log(data)})},$scope.cancelSubscription=function(){$scope.stripeCustomerId=$scope.user.customerToken,$scope.loading=!0,$scope.hideUpgrades=!0,$http.post(ROOT+"api/subscriptions/cancel",$scope.user).success(function(data){$scope.user=data,$scope.showCancellation=!1,Auth.setCurrentUser($scope.user),$http.post(ROOT+"api/users/sendCancelLetter",$scope.user)}).error(function(data){console.log("Error: ",data)})},$scope.selectPlan=function(mainOrUpgrade,plan){var isLifeTimePlan=void 0===plan;$scope.loadingChangePlan=!0,isLifeTimePlan||($scope.planId=plan.id);var options={description:isLifeTimePlan?"Gold LifeTime":plan.name,amount:isLifeTimePlan?15e3:plan.amount,email:$scope.user.email};$scope.user.canceledSubscription&&"cancel"!==mainOrUpgrade&&(mainOrUpgrade="main"),"main"===mainOrUpgrade?stripeHandler.open(options).then(function(result){if($scope.loadbarMessage="processing your plan selection",$scope.loadingPlans=!0,result.error)console.log(result);else{var user=result[0];user.email=$scope.user.email,isLifeTimePlan||(user.plan_id=plan.id),user.is_life_plan=isLifeTimePlan,$http.post(ROOT+"api/subscriptions",user).then(function(result,status,headers,config){$scope.user=result.data,$scope.user.canceledSubscription=!1,$scope.hideUpgrades=!0,$scope.loadingChangePlan=!1,$scope.loadingPlans=!1,toaster.success({title:"Payment Successful"}),Auth.setCurrentUser(result.data),$scope.user.first_time_purchase=!0,$http.post(ROOT+"api/users/planSelectionEmail",$scope.user).catch(function(data){console.log(data)})}).catch(function(data,status,headers,config){console.log(data),$scope.loadingChangePlan=!1,$scope.loadingPlans=!1})}}):"cancel"===mainOrUpgrade?$scope.showUpdateOptions():isLifeTimePlan?$http.post(ROOT+"api/subscriptions/cancel",$scope.user).then(function(data){$scope.loadbarMessage="processing your plan selection",stripeHandler.open(options).then(function(result){result.error?console.log("Error: ",result.error.message):(result[0].email=$scope.user.email,result[0].is_life_plan=!0,$http.post(ROOT+"api/subscriptions",result[0]).success(function(data,status,headers,config){$scope.user=data,Auth.setCurrentUser($scope.user),$http.post(ROOT+"api/users/planSelectionEmail",$scope.user).catch(function(data){console.log(data)}),$route.reload()}).error(function(data,status,headers,config){console.log(data)}))})}):$http.post(ROOT+"api/subscriptions/changePlan",{userId:$scope.user.customerToken,planId:plan.id,subscriptionId:$scope.user.subscriptionId}).then(function(data){$scope.loadbarMessage="changing your plan",$scope.loadingPlans=!0,data.status&&(toaster.success({title:"Your plan has been changed."}),$scope.user.planName=plan.id,$scope.hideUpgrades=!0,$scope.user.first_time_purchase=!1,Auth.setCurrentUser($scope.user),$http.post(ROOT+"api/users/planSelectionEmail",$scope.user).catch(function(data){console.log(data)}))}).catch(function(data){console.log(data)})}}]),esServerApp.controller("SheepImageCtrl",["$scope","$log","$location",function($scope,$log,$location){$scope.clothImages=[{url:"/assets/public/images/cloth6_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/men-s-t-shirt-sheep-xx-generation-yy",type:"image"},{url:"/assets/public/images/cloth5_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/women-t-tanktop-fusion",type:"image"},{url:"/assets/public/images/cloth4_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/men-s-t-shirt-dark-fusion",type:"image"},{url:"/assets/public/images/cloth3_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/men-s-t-shirt-electron",type:"image"},{url:"/assets/public/images/cloth9_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/new-mens-t-shirt-electric-garden",type:"image"},{url:"/assets/public/images/cloth7_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/new-women-s-fitted-tank-electric-garden",type:"image"},{url:"/assets/public/images/cloth10_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/new-men-s-t-shirt-wasp",type:"image"},{url:"/assets/public/images/cloth8_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/new-men-s-t-shirt-celeste",type:"image"},{url:"/assets/public/images/cloth2_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/viola-fitted-tank",type:"image"},{url:"/assets/public/images/cloth1_full.png",urlBuy:"https://squareup.com/store/electric-sheep/item/women-s-legging-fusion",type:"image"}],$scope.images=[{url:"/assets/public/images/11.jpg",type:"image"},{url:"/assets/public/images/22.jpg",type:"image"},{url:"/assets/public/images/33.jpg",type:"image"},{url:"/assets/public/images/44.jpg",type:"image"},{url:"/assets/public/images/55.jpg",type:"image"},{url:"/assets/public/images/66.jpg",type:"image"},{url:"/assets/public/images/77.jpg",type:"image"},{url:"/assets/public/images/88.jpg",type:"image"}],$scope.videos=[{video:"https://www.youtube.com/embed/d9XCIQK0sK0?feature=player_embedded",type:"iframe",url:"/assets/public/images/video2.jpg"},{video:"https://www.youtube.com/embed/qVvoCAylypM?feature=player_embedded",type:"iframe",url:"/assets/public/images/video3.jpg"},{video:"https://www.youtube.com/embed/rEVaxgg2kEo?feature=player_embedded",type:"iframe",url:"/assets/public/images/video4.jpg"},{video:"https://www.youtube.com/embed/ipw4A6AXokk?feature=player_embedded",type:"iframe",url:"/assets/public/images/video1.jpg"},{video:"https://www.youtube.com/embed/J3XZwDPr49o?feature=player_embedded",type:"iframe",url:"/assets/public/images/video5.jpg"}],$scope.openFancybox=function(imageData){var imagePath=(imageData=imageData[0][0]).urlFull?imageData.urlFull.toString():imageData.url.toString();if("iframe"!==imageData.type){var image_full=$location.protocol()+"://"+$location.host()+":"+$location.port()+imagePath;$.fancybox.open(image_full)}else $.fancybox.open({href:imageData.video,type:imageData.type})}}]),esServerApp.controller("SignInCtrl",["$scope","$modalInstance","Auth","toaster",function($scope,$modalInstance,Auth,toaster){$scope.user={email:"",password:""},$scope.loading=!1,$scope.submitted=!1,$scope.close=function(){$modalInstance.close()},$scope.login=function(form){$scope.submitted=!0,$scope.loading=!0,form.$valid?Auth.login({email:$scope.user.email,password:$scope.user.password}).then(function(response){$scope.loading=!1,$modalInstance.close(),toaster.success({title:"You have successfully signed in!"})}).catch(function(error){console.log(error),$scope.loading=!1,null==error?$modalInstance.dismiss("Connection failed."):$scope.error=error.message}):($scope.loading=!1,$scope.submitted=!0)},$scope.switchToSignUp=function(){$modalInstance.close({openSignUp:!0})},$scope.showForgotInstruction=function(){$modalInstance.close({openForgotPassword:!0})}}]),esServerApp.factory("myUserInfoService",["$http",function($http){return{getData:function(){return $http.get(ROOT+"api/users/me/").then(function(result){return result.data})}}}]),esServerApp.controller("SignUpGoldCtrl",["$scope","$modalInstance","Auth","$http","toaster","$modal",function($scope,$modalInstance,Auth,$http,toaster,$modal){$scope.user={email:"",password:"",confirmPassword:"",terms:!1},$scope.errors={},$scope.submitted=!1,$scope.loading=!1,$scope.close=function(){$modalInstance.close()},$scope.switchToSignIn=function(){$modalInstance.close({openSignIn:!0})},$scope.showForgotInstruction=function(){$modalInstance.close({openForgotPassword:!0})},$scope.next=function(form){form.$valid?($scope.submitted=!0,$scope.loading=!0,Auth.createUser({email:$scope.user.email,password:$scope.user.password}).then(function(res){Auth.isLoggedInAsync(function(success){$http.post(ROOT+"api/users/sendWelcomeLetter",$scope.user).catch(function(data){console.log(data.data)}),Auth.login({email:$scope.user.email,password:$scope.user.password}).then(function(){$scope.loading=!1,$modalInstance.close({managePlan:!0}),toaster.pop({type:"success",title:"Thank you for signing up! Please select a plan to upgrade to.",timeout:5e3})})}),$scope.loading=!1}).catch(function(err){err=err.data,$scope.errors={},$scope.loading=!1,null==err?$modalInstance.dismiss("Connection failed."):angular.forEach(err.errors,function(error,field){form[field].$setValidity("mongoose",!1),$scope.errors[field]=error.message})})):form.terms.$valid&&($scope.submitted=!0)}}]),esServerApp.directive("setHeight",["$window","$rootScope",function($window,$rootScope){return{restrict:"A",link:function(scope,element,attributes){$rootScope.colHeight=element[0].offsetHeight,angular.element($window).bind("resize",function(){$rootScope.colHeight=element[0].offsetHeight,scope.$apply()})}}}]),esServerApp.directive("getHeight",["$window","$rootScope",function($window,$rootScope){return{restrict:"A",link:function(scope,element,attributes){scope.$watch(function(){return $rootScope.colHeight},function(oldVal,newVal){element.css("height",$rootScope.colHeight+"px")})}}}]),esServerApp.directive("autofocus",["$timeout",function($timeout){return{restrict:"A",link:function($scope,$element){$timeout(function(){$element[0].focus()})}}}]),angular.module("esServerApp").directive("capitalEmailValidation",function($modal){return{restrict:"EA",require:"ngModel",link:function(scope,element,attributes,ngModel){ngModel.$parsers.push(function(input){var lowerInput=input.toLowerCase();if(input!==lowerInput)$modal.open({templateUrl:"EmailCapitalError.html",controller:"SignUpGoldCtrl"});return ngModel.$setViewValue(lowerInput),ngModel.$render(),lowerInput||""})}}}),esServerApp.directive("goldDifference",function(){return{restrict:"E",template:'<h4>What do you get for your Gold Sheep subscription?</h4><p>You get higher quality visuals, and faster servers with more bandwidth.</p><p>The Gold Sheep are for the desktop version only.  They require the new client so be sure to have <a target="_blank" href="#download">upgraded to v3.0</a> or better.</p><p>The regular free Electric Sheep are at TV resolution and aspect ratio. The Gold Sheep are HD and widescreen, with double the number of total pixels. Not only that, the Gold Sheep have 250% higher bandwidth due to better compression settings. Furthermore, they move in slow motion, with double the resolution in time. Together, this results in startling depth, clarity, and fluidity with none of the blocky blurring seen in the free version.  Anyone who likes the free Sheep will <strong>love</strong> the Gold Sheep.</p><p>Here are some <a target="_blank" href="https://twitter.com/ElectricSHE3P/status/845839985173561345">real user testimonials</a>, and <a target="_blank" href="https://twitter.com/ElectricSHE3P/status/899453076951715840">more testimonials</a>.</p><p>These higher resolution files are delivered by the Amazon CloudFront network, instead of free servers kindly donated by <a target="_blank" href="https://archive.org">The Internet Archive</a>.</p><div class="clearfix"></div>'}}),angular.module("esServerApp").directive("mongooseError",function(){return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ngModel){element.on("keydown",function(){return ngModel.$setValidity("mongoose",!0)})}}}),esServerApp.directive("passwordValidation",function(){return{restrict:"A",require:"ngModel",scope:{otherModelValue:"=passwordValidation"},link:function(scope,element,attributes,ngModel){ngModel.$validators.compareTo=function(modelValue){return modelValue===scope.otherModelValue},scope.$watch("otherModelValue",function(){ngModel.$validate()})}}}),angular.module("esServerApp").factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q","ROOT_URL",function($location,$rootScope,$http,User,$cookieStore,$q,ROOT_URL){var currentUser={};return $cookieStore.get("token")&&(currentUser=User.get()),{getUser:function(){return User.get()},login:function(user,callback){var cb=callback||angular.noop,deferred=$q.defer();return $http.post(ROOT_URL+"api/auth/local",{email:user.email,password:user.password+"sh33p"+user.email}).success(function(data){$cookieStore.put("token",data.token),currentUser=User.get(),currentUser=User.get(function(){return deferred.resolve(data),cb()})}).error(function(err){return this.logout(),deferred.reject(err),cb(err)}.bind(this)),deferred.promise},logout:function(){$cookieStore.remove("token"),currentUser={},$location.path("/")},createUser:function(user,callback){var cb=callback||angular.noop;return User.save(user,function(data){return cb(user)},function(err){return this.logout(),cb(err)}.bind(this)).$promise},deleteUser:function(callback){var cb=callback||angular.noop;return User.destroy({id:currentUser._id},function(user){return cb(user)},function(err){return cb(err)}).$promise},changePassword:function(oldPassword,newPassword,callback){var cb=callback||angular.noop;return User.changePassword({id:currentUser._id},{oldPassword:oldPassword,newPassword:newPassword},function(user){return cb(user)},function(err){return cb(err)}).$promise},getCurrentUser:function(){return currentUser},setCurrentUser:function(data){currentUser=data},isLoggedIn:function(){return currentUser.hasOwnProperty("role")},isLoggedInAsync:function(cb){currentUser.hasOwnProperty("$promise")?currentUser.$promise.then(function(){cb(!0)}).catch(function(){cb(!1)}):currentUser.hasOwnProperty("role")?cb(!0):cb(!1)},isAdmin:function(){return"admin"===currentUser.role},isVerifiedEmail:function(){var value=!1;return"1"===currentUser.is_verified&&(value=!0),value},getCurrentUserPlan:function(){var planId=2;return"es-gold-annual"===currentUser.planName?planId=0:"es-gold-monthly"===currentUser.planName&&(planId=1),planId},getStripeCustomerID:function(){return currentUser.customerToken},isSubscriptionCancelled:function(){return!!currentUser.canceledSubscription},getPlanEndDate:function(){return currentUser.planEndDate},getTrailEndDate:function(){return currentUser.trial_end},getSubscriptionId:function(){return currentUser.subscriptionId},getToken:function(){return $cookieStore.get("token")}}}]),angular.module("esServerApp").factory("User",["$resource","ROOT_URL",function($resource,ROOT_URL){return $resource(ROOT_URL+"api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]);
//# sourceMappingURL=scripts.min.js.map